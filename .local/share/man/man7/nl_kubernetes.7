.TH Kubernetes Cheatsheet 7 2019-03-22 "Kubernetes Cheatsheet" "Nicolas Lamirault"
.SH NAME
Kubernetes \- Cheatsheet
.SH SYNOPSIS
.PP
Cheatsheet for Kubernetes
.\" .SH NOTE
.\" .PP
.\" .SH DESCRIPTION
.\" .PP

.\" -------------------------------------------------------------------------

.SH Cluster

.SS Version
.PP
kubectl version

.SS Informations
.PP
kubectl cluster-info

.\" -------------------------------------------------------------------------

.SH Resources Printing

.SS Additional columns
.PP
kubectl .... -o wide

.SS Custom columns
.PP
kubectl get deployments -o custom-columns="Name:metadata.name,Replicas:spec.replicas,Strategy:spec.strategy.type"

.SS Outputs YAML, JSON
.PP
kubectl .... -o yaml|json

.\" -------------------------------------------------------------------------

.SH NODE MAINTENANCE

.SS Mark node as unschedulable
.PP
kubectl cordon $NODE_NAME

.SS Mark node as schedulable
.PP
kubectl uncordon $NODE_NAME

.SS Drain node in preparation for maintenance
.PP
kubectl drain $NODE_NAME

.\" -------------------------------------------------------------------------

.SH PERFORMANCE

.SS Get node resource usage
.PP
kubectl top node

.SS Get pod resource usage
.PP
kubectl top pod

.SS Get resource usage for a given pod
.PP
kubectl top <podname> --containers

.SS List resource utilization for all containers
.PP
kubectl top pod --all-namespaces --containers=true

.\" -------------------------------------------------------------------------

.SH EXTENSIONS

.SS List api group
.PP
kubectl api-versions

.SS List all CRD
.PP
kubectl get crd

.SS List storageclass
.PP
kubectl get storageclass

.SS List all supported resources
.PP
kubectl api-resources

.SS List all supported resources for an API group
.PP
kubectl api-resources --api-group=monitoring.coreos.com

.\" -------------------------------------------------------------------------

.SH NAMESPACES & SECURITY

.SS List authenticated contexts
.PP
kubectl config get-contexts, ~/.kube/config

.SS Load context from config file
.PP
kubectl get cs --kubeconfig kube_config.yml

.SS Switch context
.PP
kubectl config use-context <cluster-name>

.SS Delete the specified context
.PP
kubectl config delete-context <cluster-name>

.SS List all namespaces defined
.PP
kubectl get namespaces

.SS Set namespace preference
.PP
kubectl config set-context $(kubectl config current-context) --namespace=<ns1>

.SS List certificates
.PP
kubectl get csr

.\" -------------------------------------------------------------------------

.SH NETWORK

.SS Temporarily add a port-forwarding
.PP
kubectl port-forward redis-izl09 6379

.SS Add port-forwaring for deployment
.PP
kubectl port-forward deployment/redis-master 6379:6379

.SS Add port-forwaring for replicaset
.PP
kubectl port-forward rs/redis-master 6379:6379

.SS Add port-forwaring for service
.PP
kubectl port-forward svc/redis-master 6379:6379

.SS Get network policy
.PP
kubectl get NetworkPolicy

.\" -------------------------------------------------------------------------

.SH POD

.SS List all pods
.PP
kubectl get pods

.SS List pods for all namespace
.PP
kubectl get pods -all-namespaces

.SS List all critical pods
.PP
kubectl get -n kube-system pods -a

.SS List pods with more info
.PP
kubectl get pod -o wide, kubectl get pod/<pod-name> -o yaml

.SS Get pod info
.PP
kubectl describe pod/srv-mysql-server

.SS List all pods with labels
.PP
kubectl get pods --show-labels

.SS List running pods
.PP
kubectl get pods –field-selector=status.phase=Running

.SS Get Pod initContainer status
.PP
kubectl get pod --template '{{.status.initContainerStatuses}}' <pod-name>

.SS kubectl run command
.PP
kubectl exec -it -n “$ns” “$podname” – sh -c “echo $msg >>/dev/err.log”

.SS Watch pods
.PP
kubectl get pods -n wordpress --watch

.SS Get pod by selector
.PP
podname=$(kubectl get pods -n $namespace –selector=”app=syslog” -o jsonpath='{.items[*].metadata.name}’)

.SS List pods and containers
.PP
kubectl get pods -o=’custom-columns=PODS:.metadata.name,CONTAINERS:.spec.containers[*].name’

.SS List pods, containers and images
.PP
kubectl get pods -o=’custom-columns=PODS:.metadata.name,CONTAINERS:.spec.containers[*].name,Images:.spec.containers[*].image’

.\" -------------------------------------------------------------------------

.SH SERVICE

.SS List all services
.PP
kubectl get services

.SS List service endpoints
.PP
kubectl get endpoints

.SS Get service detail
.PP
kubectl get service nginx-service -o yaml

.SS Get service cluster ip
.PP
kubectl get service nginx-service -o go-template='{{.spec.clusterIP}}’

.SS Get service cluster port
.PP
kubectl get service nginx-service -o go-template='{{(index .spec.ports 0).port}}’

.SS Expose deployment as lb service
.PP
kubectl expose deployment/my-app --type=LoadBalancer --name=my-service

.SS Expose service as lb service
.PP
kubectl expose service/wordpress-1-svc --type=LoadBalancer --name=wordpress-lb

.\" -------------------------------------------------------------------------

.SH STATEFULSET

.SS List statefulset
.PP
kubectl get sts

.SS Delete statefulset only (not pods)
.PP
kubectl delete sts/<stateful_set_name> --cascade=false

.SS Scale statefulset
.PP
kubectl scale sts/<stateful_set_name> --replicas=5

.\" -------------------------------------------------------------------------

.SH VOLUMES

.SS List storage class
.PP
kubectl get storageclass

.SS Check the mounted volumes
.PP
kubectl exec storage ls /data

.SS Check persist volume
.PP
kubectl describe pv/pv0001

.SS Copy local file to pod
.PP
kubectl cp /tmp/my <some-namespace>/<some-pod>:/tmp/server

.SS Copy pod file to local
.PP
kubectl cp <some-namespace>/<some-pod>:/tmp/server /tmp/my

.\" -------------------------------------------------------------------------

.SH QUOTA & LIMITS & RESOURCES

.SS Customize resource definition
.PP
kubectl set resources deployment nginx -c=nginx --limits=cpu=200m,memory=512Mi

.SS List Resource Quota
.PP
kubectl get resourcequota

.SS List Limit Range
.PP
kubectl get limitrange

.SS Customize resource definition
.PP
kubectl set resources deployment nginx -c=nginx --limits=cpu=200m,memory=512Mi

.\" -------------------------------------------------------------------------

.SH SECRETS

.SS List secrets
.PP
kubectl get secrets --all-namespaces

.SS Create secret from cfg file
.PP
kubectl create secret generic db-user-pass --from-file=./username.txt

.\" -------------------------------------------------------------------------

.SH Documentation

.SS Look up resource specifications
.PP
kubectl explain resource[.field]... (--recursive)


.\" -------------------------------------------------------------------------

.SH SEE ALSO
.I \%https://kubernetes.io
.I \%https://kubectl.docs.kubernetes.io
