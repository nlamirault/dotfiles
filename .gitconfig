# Copyright (C) 2021 Nicolas Lamirault <nicolas.lamirault@gmail.com>

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[user]
    email = nicolas.lamirault@gmail.com
    name = Nicolas Lamirault
    signingkey = 5F99269A6FCA437C

[includeIf "gitdir:~/Work/"]
    path = ~/Work/.gitconfig

[color]
    ui = true
    diff = auto
    status = auto
    branch = auto

[alias]
    aliases = config --get-regexp alias
    lgtree = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative
    lg = log --graph --format='%Cred%h%Creset %ad %C(bold cyan)%an%Creset - %s - %C(yellow)%d%Creset' --date=short --abbrev-commit
    lga = log --format='%Cred%h%Creset %ad %C(bold cyan)%an%Creset - %s%C(yellow)%d%Creset' --graph --date=short --abbrev-commit --all
    #lgme = log --since yesterday --oneline --author 'Nicolas Lamirault'
    lgme = log --oneline --author 'Your User'
    
    meld = !"git difftool -d --tool=meld" 2> /dev/null 

    b = branch
    bd = branch -D
    c = commit
    csm = commit -s -m
    pr = prune -v
    sh = stash
    shl = stash list
    sha = stash apply
    shc = stash clear
    shp = stash pop
    sw = switch
    swc = switch -c
    
    t = tag
    ta = tag -a
    td = tag -d
    # ts = tag --format='%(creatordate:short)%09%(objectname:short)%09%(refname:strip=2)%09%(contents:subject)' --sort=creatordate
    ts = tag --format='%(creatordate:short)%09%(objectname:short)%09%(refname:strip=2)%09%(contents:subject)' --sort=taggerdate

    cancel = reset --hard
    undo = revert HEAD
    diffstat = diff --stat -r
    whatsnew = !sh -c 'git log $1@{1}..$1@{0} "$@"'
    who = shortlog -sne
    recent = branch --sort=-committerdate --format=\"%(committerdate:relative)%09%(refname:short)\"
    
    current = rev-parse --abbrev-ref HEAD
    pto = !CURRENT=$(git current) && git push --set-upstream origin $CURRENT
    pfo = !CURRENT=$(git current) && git pull --set-upstream origin $CURRENT
    pdc = !CURRENT=$(git current) && git switch master && git pull --set-upstream origin && git branch -D $CURRENT
    pdc2 = !CURRENT=$(git current) && git switch main && git pull --set-upstream origin && git branch -D $CURRENT
    dto = diff origin/master..master
    dtm = !CURRENT=$(git current) && git diff master...$CURRENT

   # Gitlab
    glpbmr = !CURRENT=$(git current) && git push --set-upstream origin $CURRENT -o merge_request.create -o merge_request.target=master -o merge_request.merge_when_pipeline_succeeds
    glpbmrd = !CURRENT=$(git current) && git  push --set-upstream origin $CURRENT -o merge_request.create -o merge_request.target=master -o merge_request.merge_when_pipeline_succeeds -o merge_request.remove_source_branch
	

[giggle]
    main-window-maximized = false
	main-window-geometry = 1262x772+1861+210
	history-view-vpane-position = 301
	file-view-vpane-position = 346
	main-window-view = HistoryView

[core]
    editor = nvim
    pager = delta

    excludesfile = ~/.gitignore
    attributesfile = ~/.gitattributes
    autocrlf = false
    safecrlf = true
    quotepath = false

[commit]
    gpgsign = true

[merge]
	# Include summaries of merged commits in newly created merge commit messages
	log = true

[push]
	default = simple
[gpg]
	program = gpg2
[diff]
	noprefix = true

[delta]
    plus-color = "#012800"
    minus-color = "#340001"
    syntax-theme = Nord # delta --list-syntax-themes
    line-numbers = true
    # side-by-side = true

[interactive]
    diffFilter = delta --color-only

[pull]
	rebase = true

[init]
	defaultBranch = main